% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runJaccard.R
\name{runJaccard}
\alias{runJaccard}
\title{Calcualte Jaccard Index Matrix}
\usage{
runJaccard(obj, mat, max.var, ncell.chunk, num.cores, seed.use)
}
\arguments{
\item{obj}{A Snap obj}

\item{mat}{A character class that indicates what matrix slot is used to calculate jaccard index c("bmat", "pmat", "gmat")}

\item{max.var}{A numeric variable indicates the how many dimentions for jaccard index to be calcualted}

\item{ncell.chunk}{A numeric class that indicates the number of cells to calculate per processing core}

\item{num.cores}{Number of processors to use.}

\item{seed.use}{A numeric variable indicates the random seed to use [10].}
}
\value{
Returns a Snap obj with the jaccard index matrix stored in obj@jmat
}
\description{
This function takes a snap object as input and calculates the jaccard index matrix 
in which each entry Jij equals the intersection over the union between cell i and cell j.
}
\details{
Calculating jaccard index becomes exponentially time-consuming and also memory 
intense with the increase of cell number. To solve this problem, we divide
the cells into groups and calculated a sub jaccard index matrix, which are later combined
to create the full jaccard index matrix.
}
